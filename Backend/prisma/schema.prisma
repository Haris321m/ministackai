generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model BillingHistory {
  Id                                                   Int         @id(map: "PK__BillingH__3214EC07D0FE9A1D") @default(autoincrement())
  UserId                                               Int?
  Amount                                               Decimal?    @db.Decimal(10, 2)
  PaymentMethod                                        String?     @db.NVarChar(50)
  Status                                               String?     @default("paid", map: "DF__BillingHi__Statu__5441852A") @db.NVarChar(20)
  CreatedAt                                            DateTime?   @default(now(), map: "DF__BillingHi__Creat__5535A963") @db.DateTime
  UserPlanId                                           Int?
  Users                                                Users?      @relation(fields: [UserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__BillingHi__UserI__5629CD9C")
  UserPlans_BillingHistory_UserPlanIdToUserPlans       UserPlans?  @relation("BillingHistory_UserPlanIdToUserPlans", fields: [UserPlanId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_BillingHistory_UserPlan")
  UserPlans_UserPlans_BillingHistoryIdToBillingHistory UserPlans[] @relation("UserPlans_BillingHistoryIdToBillingHistory")
}

model Chats {
  Id             Int            @id(map: "PK__Chats__3214EC07C822671E") @default(autoincrement())
  ChatName       String?        @db.NVarChar(200)
  UserQuestion   String?        @db.NVarChar(Max)
  BotAnswer      String?        @db.NVarChar(Max)
  BotImages      String?        @db.NVarChar(Max)
  UserDocUrl     String?        @db.NVarChar(Max)
  UserImageUrl   String?        @db.NVarChar(Max)
  BotZipUrl      String?        @db.NVarChar(Max)
  BotDocsUrl     String?        @db.NVarChar(Max)
  CreatedAt      DateTime?      @default(now(), map: "DF__Chats__CreatedAt__440B1D61") @db.DateTime
  CurrentModelId Int?
  UserId         Int?
  ConversationId Int?
  Conversations  Conversations? @relation(fields: [ConversationId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Chats__Conversat__44FF419A")
  Models         Models?        @relation(fields: [CurrentModelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Chats__CurrentMo__45F365D3")
  Users          Users?         @relation(fields: [UserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Chats__UserId__46E78A0C")
}

model Conversations {
  Id                    Int                    @id(map: "PK__Conversa__3214EC07B9672562") @default(autoincrement())
  UserId                Int?
  Title                 String?                @db.NVarChar(200)
  CreatedAt             DateTime?              @default(now(), map: "DF__Conversat__Creat__403A8C7D") @db.DateTime
  Chats                 Chats[]
  Users                 Users?                 @relation(fields: [UserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Conversat__UserI__412EB0B6")
  ConversationSummaries ConversationSummaries?
}

model Models {
  Id          Int          @id(map: "PK__Models__3214EC074271FB70") @default(autoincrement())
  Name        String?      @db.NVarChar(255)
  Provider    String?      @db.NVarChar(100)
  Type        String?      @db.NVarChar(50)
  CreatedAt   DateTime?    @default(now(), map: "DF__Models__CreatedA__3D5E1FD2") @db.DateTime
  ModelFamily String?      @db.NVarChar(50)
  Chats       Chats[]
  PlanModels  PlanModels[]
  UsageLogs   UsageLogs[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61451E1D73") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model UsageLogs {
  Id              BigInt    @id(map: "PK__UsageLog__3214EC0700FE9CE5") @default(autoincrement())
  UserId          Int?
  ModelId         Int?
  TokensUsed      Int?      @default(0, map: "DF__UsageLogs__Token__4D94879B")
  ImagesGenerated Int?      @default(0, map: "DF__UsageLogs__Image__4E88ABD4")
  UsedAt          DateTime? @default(now(), map: "DF__UsageLogs__UsedA__4F7CD00D") @db.DateTime
  Models          Models?   @relation(fields: [ModelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__UsageLogs__Model__5165187F")
  Users           Users?    @relation(fields: [UserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__UsageLogs__UserI__5070F446")

  @@index([ModelId], map: "IX_UsageLogs_ModelId")
  @@index([UserId], map: "IX_UsageLogs_UserId")
}

model UserLimits {
  Id          Int       @id(map: "PK__UserLimi__3214EC07B687B78E") @default(autoincrement())
  UserId      Int?      @unique(map: "UQ__UserLimi__1788CC4DBE42A131")
  TokensLimit Int?
  ImagesLimit Int?
  DocsLimit   Int?
  ExpiryDate  DateTime? @db.DateTime
  Users       Users?    @relation(fields: [UserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__UserLimit__UserI__4AB81AF0")

  @@index([UserId], map: "IX_UserLimits_UserId")
}

model Users {
  Id                    Int                     @id(map: "PK__Users__3214EC079B3A409B") @default(autoincrement())
  FirstName             String?                 @db.NVarChar(30)
  LastName              String?                 @db.NVarChar(30)
  Email                 String?                 @unique(map: "UQ__Users__A9D105346AC57BBC") @db.NVarChar(100)
  PasswordHash          String?                 @db.NVarChar(255)
  Role                  String?                 @default("user", map: "DF__Users__Role__38996AB5") @db.NVarChar(20)
  CreatedAt             DateTime?               @default(now(), map: "DF__Users__CreatedAt__398D8EEE") @db.DateTime
  BillingHistory        BillingHistory[]
  Chats                 Chats[]
  Conversations         Conversations[]
  ConversationSummaries ConversationSummaries[]
  UsageLogs             UsageLogs[]
  UserImages            UserImages[]
  UserLimits            UserLimits?
  UserPlans             UserPlans[]
}

model Plans {
  Id           Int          @id(map: "PK__Plans__3214EC07E0D7DFDA") @default(autoincrement())
  Name         String       @db.NVarChar(100)
  Slug         String?      @unique(map: "UQ__Plans__BC7B5FB640A3ACED") @db.NVarChar(100)
  Description  String?      @db.NVarChar(500)
  Price        Decimal?     @db.Decimal(10, 2)
  Currency     String?      @default("USD", map: "DF__Plans__Currency__70DDC3D8") @db.NVarChar(10)
  TokensLimit  Int?
  ImagesLimit  Int?
  DocsLimit    Int?
  DurationDays Int?
  IsActive     Boolean?     @default(true, map: "DF__Plans__IsActive__71D1E811")
  CreatedAt    DateTime?    @default(now(), map: "DF__Plans__CreatedAt__72C60C4A") @db.DateTime
  PlanModels   PlanModels[]
  UserPlans    UserPlans[]
}

model UserPlans {
  Id                                                        Int              @id(map: "PK__UserPlan__3214EC0763DD4654") @default(autoincrement())
  UserId                                                    Int
  PlanId                                                    Int
  Status                                                    String?          @default("active", map: "DF__UserPlans__Statu__75A278F5") @db.NVarChar(20)
  StartAt                                                   DateTime?        @default(now(), map: "DF__UserPlans__Start__76969D2E") @db.DateTime
  EndAt                                                     DateTime?        @db.DateTime
  AutoRenew                                                 Boolean?         @default(false, map: "DF__UserPlans__AutoR__778AC167")
  BillingHistoryId                                          Int?
  CreatedAt                                                 DateTime?        @default(now(), map: "DF__UserPlans__Creat__787EE5A0") @db.DateTime
  BillingHistory_BillingHistory_UserPlanIdToUserPlans       BillingHistory[] @relation("BillingHistory_UserPlanIdToUserPlans")
  BillingHistory_UserPlans_BillingHistoryIdToBillingHistory BillingHistory?  @relation("UserPlans_BillingHistoryIdToBillingHistory", fields: [BillingHistoryId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__UserPlans__Billi__7B5B524B")
  Plans                                                     Plans            @relation(fields: [PlanId], references: [Id], onUpdate: NoAction, map: "FK__UserPlans__PlanI__7A672E12")
  Users                                                     Users            @relation(fields: [UserId], references: [Id], onUpdate: NoAction, map: "FK__UserPlans__UserI__797309D9")
}

model PlanModels {
  PlanId  Int
  ModelId Int
  Models  Models @relation(fields: [ModelId], references: [Id], onUpdate: NoAction, map: "FK__PlanModel__Model__03F0984C")
  Plans   Plans  @relation(fields: [PlanId], references: [Id], onUpdate: NoAction, map: "FK__PlanModel__PlanI__02FC7413")

  @@id([PlanId, ModelId], map: "PK__PlanMode__ABD158A59C4E9C12")
}

model UserImages {
  Id         Int       @id(map: "PK__UserImag__3214EC07F16BFDEB") @default(autoincrement())
  UserId     Int
  ImageUrl   String    @db.NVarChar(255)
  UploadedAt DateTime? @default(now(), map: "DF__UserImage__Uploa__06CD04F7") @db.DateTime
  Users      Users     @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_UserImages_Users")
}

model ConversationSummaries {
  Id             Int           @id(map: "PK__Conversa__3214EC0720FDB4BE") @default(autoincrement())
  ConversationId Int           @unique(map: "UQ_Conversation")
  UserId         Int
  Summary        String        @db.NVarChar(Max)
  UpdatedAt      DateTime?     @default(now(), map: "DF__Conversat__Updat__0B91BA14") @db.DateTime
  Conversations  Conversations @relation(fields: [ConversationId], references: [Id], onUpdate: NoAction, map: "FK_Conversation")
  Users          Users         @relation(fields: [UserId], references: [Id], onUpdate: NoAction, map: "FK_SummaryUser")
}
